human controlCharater(human characters[], human player1, char c, int is_collision, int *hit_player, const unsigned long *frame_array[])
{   
    if(player1.is_alive == 0){
        drawRectARGB32(player1.x, player1.y, player1.x + player1.frame_width, player1.y + player1.frame_height, 0x00000000, 1);
        player1.x =500;
        player1.y =0;
        return player1;
    }
    if (is_collision)
    {
        player1.x = player1.prior_x;
        player1.y = player1.prior_y;
        return player1;
    }
    
    
        player1.prior_x = player1.x;
        player1.prior_y = player1.y;
    

    if (c == 'd' || c == 'a' || c == 'w' || c == 's')
    {
        frame++;
        if (frame > player1.frame_max)
        {
            frame = 0;
        }
        drawRectARGB32(player1.x, player1.y, player1.x + player1.frame_width, player1.y + player1.frame_height, 0x00000000, 1);
    }
    if (c == 'd')
    {
        player1.offset = player1.moveright_frame_offset + frame;
        player1.x += 5;
    }
    else if (c == 'a')
    {
        player1.offset = player1.moveleft_frame_offset + frame;
        player1.x -= 5;
    }
    else if (c == 'w')
    {
        player1.offset = player1.moveup_frame_offset + frame;
        player1.y -= 5;
    }
    else if (c == 's')
    {
        player1.offset = player1.movedown_frame_offset + frame;
        player1.y += 5;
    }
    else if (c == 'j' || player1.bomb_num)
    {
        player1 = plant_bomb(characters, player1, c, hit_player);
    }else if (c == 't'){
       player1.offset = 36;
    }

    drawGameAsset(player1.offset, player1.x, player1.y, player1.frame_width, player1.frame_height, frame_array);

    return player1;
}


human move(human players[], human npc, moves moves[], unsigned int move_size, int is_collision, int *hit_player, const unsigned long *frame_array[])
{
    //human temp = controlCharater(players, npc, moves[npc.move_index].direction, is_collision, hit_player, frame_array);
    human temp = controlCharater(players, npc, moves[npc.move_index].direction, tracking_player_on_map(npc, map2, moves[npc.move_index].direction), hit_player, frame_array);
    
     //npc = controlCharater(characters, npc, 'a', 0, tracking_player_on_map(npc, map2, 'a'));
               
                
    if(tracking_player_on_map(npc, map2, moves[npc.move_index].direction) != 0){
        temp.move_index = temp.move_index+1;
    }

    if (temp.move_index > move_size - 1)
    {
        temp.move_index = 0;
    }
   
    return temp;
}


